name: Downstream CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  deployment:
    name: Deploy
    environment: prod
    runs-on: ubuntu-latest
    needs: vue-app-tests
    continue-on-error: true
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Trigger Downstream API Build
        run: |
          /usr/bin/curl --output /dev/null --silent -H "Content-Type: application/json" -X POST "${{ secrets.DOCKER_HUB_API_TRIGGER_ROUTE }}"
      - name: Trigger Downstream App Build
        run: |
          /usr/bin/curl --output /dev/null --silent -H "Content-Type: application/json" -X POST "${{ secrets.DOCKER_HUB_APP_TRIGGER_ROUTE }}"
  api-unit-test:
    name: Laravel API Tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: test_db
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 8989:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.ci', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      #- name: Set Directory Permissions
      #  run: chmod -R 777 storage bootstrap/cache
      - name: Run Database Migrations
        run: php artisan migrate
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit
        env:
          YOUTUBE_KEY: ${{ secrets.YOUTUBE_KEY }}
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
  vue-app-tests:
    runs-on: ubuntu-latest
    needs: api-unit-test

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run lint
      - run: npm run build
      - run: npm test
        env:
          CI: true
